git config --global user.name "Salimzhan Bizhanov"
git config --global user.email "salimsnomad@gmail.com"
git config -l

Заходим в папку проекта, например, cd MyProjectN и вводим команду 
git init . - точка означает, что инициируем текущую папку, можно вписать путь другой папки вместо точки

git status - самая используемая команда.

git add * - добавить все файлы. Если конкретный файл, то git add file1.py
После этого необходимо сделать снимок:
git commit -m "My initial commit, this is Version1"
Теперь эти два файла стали снимками.

git log -1 - история коммитов. Цифра 1 это количество последних коммитов.
git log -1 -p - добавление "-p" показывает подробно, что было сделано в коммите.

Если файл изменил и в нем ошибка и нужно вернуться в состояние до изменений и при этом еще не сделано git add *, то 
можно ввести команду:
git checkout -- file1.txt - в результате будет откат файла в прежнее состояние

git diff --staged - показывает разницу между staged и последним коммитом

если создать файл .gitignore - тогда в этом файле прописываем то, что хотим игнорировать гитом

git clone https://github.com/Salimzhan/MyProject_Git1.git - позволяет клонировать код с хитхаба на локальный комп.
Создается папка проекта и в ней уже идет работа.

Далее локально мы внесли изменения в проект, сделали add, commit и хотим отправить измененный проект в новой версии на гитхаб, то:
git push origin - далее гит запросит логин и пароль (если https соединение) и отправит.

Если не хотим писать каждый раз пароль, то нужно сгенерировать ssh-key.
Смотрим содержимое папки ~/.ssh/ - там пока нет ssh ключа.
ssh-keygen - генерация ssh ключа. После этой команды не вводим никакие пароли. В папке ~/.ssh/ появятся два ключа private и public.
cat ~/.ssh/id_rsa.pub - внутри файла ключ копируем и переходим в гитхаб в user - settings - SSH and GPG keys и new SSH key. Называем его и копипастим.

На windows для генерации ssh ключа заходим в git bash и вводим команду ssh-keygen - ключ сохраняется, где нужно. Также копируем публичный ключ и вставляем в гитхаб.


git remote -v - показывает по какому протоколу мы соединены с гитхаб (https или ssh).
Если с https соединения с гитхаб хотим перейти на ssh, то вводим команду:
git remote set-url origin git@github.com:Salimzhan/MyProject_Git1.git




